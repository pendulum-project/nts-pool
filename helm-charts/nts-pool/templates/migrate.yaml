apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "nts-pool.fullname" . }}-migrate
  namespace: {{ default .Release.Namespace .Values.namespaceOverride }}
  annotations:
    "helm.sh/hook": pre-upgrade,pre-install
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    spec:
      restartPolicy: OnFailure
      {{- if .Values.management.databaseCertificate.cert }}
      volumes:
        - name: db-cert-volume
          configMap:
            name: {{ include "nts-pool.fullname" . }}-management-db-cert
      {{- end }}
      containers:
        - name: management-migrate
          imagePullPolicy: "{{ default .Values.image.pullPolicy .Values.management.image.pullPolicy }}"
          {{- with default .Values.image.pullSecrets .Values.management.image.pullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ default .Values.image.repository .Values.management.image.repository }}:{{ default .Values.image.tag .Values.management.image.tag }}"
          command: ["/usr/local/bin/nts-pool-management"]
          workingDir: "/opt/nts-pool-management"
          {{- if .Values.management.databaseCertificate.cert }}
          volumeMounts:
            - name: db-cert-volume
              mountPath: {{ .Values.management.databaseCertificate.mountPath }}
              subPath: db.pem
          {{- end }}
          env:
            {{- include "nts-pool.management-env" . | nindent 12 }}
            - name: NTSPOOL_DATABASE_RUN_MIGRATIONS
              value: "only-migrate"
