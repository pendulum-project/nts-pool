---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nts-pool.fullname" . }}-management
  namespace: {{ default .Release.Namespace .Values.namespaceOverride }}
  labels:
    {{- include "nts-pool.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount | default 1 }}
  selector:
    matchLabels:
      app.kubernetes.io/component: management
      {{- include "nts-pool.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: management
        {{- include "nts-pool.selectorLabels" . | nindent 8 }}
    spec:
      volumes:
        - name: geolocation-script
          configMap:
            name: {{ include "nts-pool.fullname" . }}-geolocation-loader
            items:
              - key: "geolocation-loader.sh"
                path: "geolocation-loader.sh"
                mode: 0755
        - name: geolocation
          emptyDir: {}
        {{- if .Values.management.databaseCertificate.cert }}
        - name: db-cert-volume
          configMap:
            name: {{ include "nts-pool.fullname" . }}-management-db-cert
        {{- end }}
      initContainers:
      - name: geolocation
        imagePullPolicy: "{{ default .Values.image.pullPolicy .Values.management.image.pullPolicy }}"
        {{- with default .Values.image.pullSecrets .Values.management.image.pullSecrets }}
        imagePullSecrets:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        image: "{{ default .Values.image.repository .Values.management.image.repository }}:{{ default .Values.image.tag .Values.management.image.tag }}"
        command: ["/opt/geodb/scripts/geolocation-loader.sh"]
        workingDir: "/opt/geodb/"
        volumeMounts:
          - name: geolocation
            mountPath: "/opt/geodb"
          - name: geolocation-script
            mountPath: "/opt/geodb/scripts/"
            readOnly: true
        restartPolicy: Always
        startupProbe:
          exec:
            command:
              - sh
              - -c
              - test -e /opt/geodb/geodb.mmdb
        env:
          - name: USERID
            valueFrom:
              secretKeyRef:
                {{- toYaml .Values.geolocation.maxmindUserIdSecretRef | nindent 16 }}
          - name: LICENSE_KEY
            valueFrom:
              secretKeyRef:
                {{- toYaml .Values.geolocation.maxmindLicenseKeySecretRef | nindent 16 }}
          - name: URL
            value: {{ .Values.geolocation.maxmindDatabaseUrl }}
          - name: TARGET
            value: "/opt/geodb/geodb.mmdb"
          - name: PERIOD
            value: "24h"
      containers:
      - name: management
        imagePullPolicy: "{{ default .Values.image.pullPolicy .Values.management.image.pullPolicy }}"
        {{- with default .Values.image.pullSecrets .Values.management.image.pullSecrets }}
        imagePullSecrets:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        image: "{{ default .Values.image.repository .Values.management.image.repository }}:{{ default .Values.image.tag .Values.management.image.tag }}"
        command: ["/usr/local/bin/nts-pool-management"]
        workingDir: "/opt/nts-pool-management"
        volumeMounts:
          - name: geolocation
            mountPath: "/opt/geodb"
        {{- if .Values.management.databaseCertificate.cert }}
          - name: db-cert-volume
            mountPath: {{ .Values.management.databaseCertificate.mountPath }}
            subPath: db.pem
        {{- end }}
        ports:
          - containerPort: 3000
            name: http
          - containerPort: 3001
            name: http-internal
        env:
          {{- include "nts-pool.management-env" . | nindent 10 }}
          - name: NTSPOOL_DATABASE_RUN_MIGRATIONS
            value: "false"
          - name: RESTART_BUMP
            value: "{{ default 1 .Values.management.restartBump}}"
