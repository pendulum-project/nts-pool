{{- if .Values.management.databaseCertificate.cert }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "nts-pool.fullname" . }}-management-db-cert
  namespace: {{ default .Release.Namespace .Values.namespaceOverride }}
  labels:
    {{- include "nts-pool.labels" . | nindent 4 }}
data:
  db.pem: |
    {{- .Values.management.databaseCertificate.cert | nindent 4 }}
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nts-pool.fullname" . }}-management
  namespace: {{ default .Release.Namespace .Values.namespaceOverride }}
  labels:
    {{- include "nts-pool.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount | default 1 }}
  selector:
    matchLabels:
      app.kubernetes.io/component: management
      {{- include "nts-pool.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: management
        {{- include "nts-pool.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.management.databaseCertificate.cert }}
      volumes:
        - name: db-cert-volume
          configMap:
            name: {{ include "nts-pool.fullname" . }}-management-db-cert
      {{- end }}
      containers:
      - name: management
        imagePullPolicy: "{{ default .Values.image.pullPolicy .Values.management.image.pullPolicy }}"
        {{- with default .Values.image.pullSecrets .Values.management.image.pullSecrets }}
        imagePullSecrets:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        image: "{{ default .Values.image.repository .Values.management.image.repository }}:{{ default .Values.image.tag .Values.management.image.tag }}"
        command: ["/usr/local/bin/nts-pool-management"]
        workingDir: "/opt/nts-pool-management"
        {{- if .Values.management.databaseCertificate.cert }}
        volumeMounts:
          - name: db-cert-volume
            mountPath: {{ .Values.management.databaseCertificate.mountPath }}
            subPath: db.pem
        {{- end }}
        ports:
          - containerPort: 3000
            name: http
        env:
          - name: NTSPOOL_DATABASE_URL
            valueFrom:
              secretKeyRef:
                {{- toYaml .Values.management.databaseUrlSecretRef | nindent 16 }}
          - name: DATABASE_URL
            valueFrom:
              secretKeyRef:
                {{- toYaml .Values.management.databaseUrlSecretRef | nindent 16 }}
          - name: NTSPOOL_DATABASE_RUN_MIGRATIONS
            value: "true"
          - name: NTSPOOL_JWT_SECRET
            valueFrom:
              secretKeyRef:
                {{- toYaml .Values.management.jwtKeySecretRef | nindent 16 }}
          - name: NTSPOOL_SMTP_URL
            valueFrom:
              secretKeyRef:
                {{- toYaml .Values.management.smtpUrlSecretRef | nindent 16 }}
          - name: NTSPOOL_COOKIE_SECRET
            valueFrom:
              secretKeyRef:
                {{- toYaml .Values.management.cookieSecretRef | nindent 16 }}
          - name: NTSPOOL_MAIL_FROM_ADDRESS
            value: "{{ .Values.management.mailFromAddress }}"
          - name: NTSPOOL_BASE_URL
            value: "{{ .Values.management.baseUrl }}"
          - name: NTSPOOL_POOLKE_NAME
            value: "{{ .Values.ke.domainName }}"
          - name: NTSPOOL_MONITOR_RESULT_BATCHSIZE
            value: "{{ .Values.monitor.resultBatchsize }}"
          - name: NTSPOOL_MONITOR_RESULT_BATCHTIME
            value: "{{ .Values.monitor.resultBatchtime }}"
          - name: NTSPOOL_MONITOR_UPDATE_INTERVAL
            value: "{{ .Values.monitor.updateInterval }}"
          - name: NTSPOOL_MONITOR_PROBE_INTERVAL
            value: "{{ .Values.monitor.probeInterval }}"
          - name: NTSPOOL_MONITOR_NTS_TIMEOUT
            value: "{{ .Values.monitor.ntsTimeout }}"
          - name: NTSPOOL_MONITOR_NTP_TIMEOUT
            value: "{{ .Values.monitor.ntpTimeout }}"
          - name: RUST_BACKTRACE
            value: "1"
          - name: RESTART_BUMP
            value: "{{ default 1 .Values.management.restartBump}}"
